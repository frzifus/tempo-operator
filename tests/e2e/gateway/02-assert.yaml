---
apiVersion: v1
data:
  tenants.yaml: dGVuYW50czoKLSBuYW1lOiB0ZXN0LW9pZGMKICBpZDogdGVzdC1vaWRjCiAgb2lkYzoKICAgIGNsaWVudElEOiB0ZXN0CiAgICBjbGllbnRTZWNyZXQ6IFpYaGhiWEJzWlMxaGNIQXRjMlZqY21WMAogICAgaXNzdWVyVVJMOiBodHRwOi8vZGV4LnN2YzozMDU1Ni9kZXgKICAgIHJlZGlyZWN0VVJMOiBodHRwOi8vdGVtcG8tZm9vLWdhdGV3YXkuc3ZjOjgwODAvb2lkYy90ZXN0LW9pZGMvY2FsbGJhY2sKICAgIHVzZXJuYW1lQ2xhaW06IGVtYWls
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: gateway
    app.kubernetes.io/instance: foo
    app.kubernetes.io/managed-by: tempo-operator
    app.kubernetes.io/name: tempo
  name: tempo-foo-gateway
  ownerReferences:
  - apiVersion: tempo.grafana.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: TempoStack
    name: foo
type: Opaque
---
apiVersion: v1
data:
  rbac.yaml: |-
    roleBindings:
    - name: test
      roles:
      - read-write

      subjects:
      - kind: user
        name: admin@example.com

    roles:
    - name: read-write
      permissions:
      - read
      - write

      resources:
      - logs
      - metrics
      - traces

      tenants:
      - test-oidc
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: gateway
    app.kubernetes.io/instance: foo
    app.kubernetes.io/managed-by: tempo-operator
    app.kubernetes.io/name: tempo
  name: tempo-foo-gateway
  ownerReferences:
  - apiVersion: tempo.grafana.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: TempoStack
    name: foo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: gateway
    app.kubernetes.io/instance: foo
    app.kubernetes.io/managed-by: tempo-operator
    app.kubernetes.io/name: tempo
  name: tempo-foo-gateway
  ownerReferences:
  - apiVersion: tempo.grafana.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: TempoStack
    name: foo
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: gateway
      app.kubernetes.io/instance: foo
      app.kubernetes.io/managed-by: tempo-operator
      app.kubernetes.io/name: tempo
  template:
    metadata:
      labels:
        app.kubernetes.io/component: gateway
        app.kubernetes.io/instance: foo
        app.kubernetes.io/managed-by: tempo-operator
        app.kubernetes.io/name: tempo
    spec:
      containers:
      - imagePullPolicy: IfNotPresent
        name: tempo-gateway
        ports:
        - containerPort: 8090
          name: grpc-public
          protocol: TCP
        - containerPort: 8081
          name: internal
          protocol: TCP
        - containerPort: 8080
          name: public
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/tempo-gateway/cm
          name: rbac
          readOnly: true
        - mountPath: /etc/tempo-gateway/secret/tenants.yaml
          name: tenant
          readOnly: true
          subPath: tenants.yaml
        - mountPath: /var/run/ca
          name: tempo-foo-ca-bundle
        - mountPath: /var/run/tls/server
          name: tempo-foo-gateway-mtls
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: rbac.yaml
            path: rbac.yaml
          name: tempo-foo-gateway
        name: rbac
      - name: tenant
        secret:
          defaultMode: 420
          items:
          - key: tenants.yaml
            path: tenants.yaml
          secretName: tempo-foo-gateway
      - configMap:
          defaultMode: 420
          name: tempo-foo-ca-bundle
        name: tempo-foo-ca-bundle
      - name: tempo-foo-gateway-mtls
        secret:
          defaultMode: 420
          secretName: tempo-foo-gateway-mtls

status:
  readyReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/instance: foo
    app.kubernetes.io/managed-by: tempo-operator
    app.kubernetes.io/name: tempo
  name: tempo-foo-query-frontend
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: foo
      app.kubernetes.io/managed-by: tempo-operator
      app.kubernetes.io/name: tempo
  template:
    metadata:
      labels:
        app.kubernetes.io/component: query-frontend
        app.kubernetes.io/instance: foo
        app.kubernetes.io/managed-by: tempo-operator
        app.kubernetes.io/name: tempo
        tempo-gossip-member: "true"
    spec:
      containers:
      - args:
        - -target=query-frontend
        - -config.file=/conf/tempo-query-frontend.yaml
        - -mem-ballast-size-mbs=1024
        - -log.level=info
        - --storage.trace.s3.secret_key=$(S3_SECRET_KEY)
        - --storage.trace.s3.access_key=$(S3_ACCESS_KEY)
        env:
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: access_key_secret
              name: minio-test
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: access_key_id
              name: minio-test
        image: docker.io/grafana/tempo:2.3.0
        imagePullPolicy: IfNotPresent
        name: tempo
        ports:
        - containerPort: 3200
          name: http
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 3101
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /conf
          name: tempo-conf
          readOnly: true
        - mountPath: /var/tempo
          name: tempo-tmp-storage
        - mountPath: /var/run/ca
          name: tempo-foo-ca-bundle
        - mountPath: /var/run/tls/server
          name: tempo-foo-query-frontend-mtls
      - args:
        - --query.base-path=/
        - --grpc-storage-plugin.configuration-file=/conf/tempo-query.yaml
        - --query.bearer-token-propagation=true
        - --multi-tenancy.enabled=true
        - --multi-tenancy.header=x-scope-orgid
        - --query.http.tls.enabled=true
        - --query.http.tls.key=/var/run/tls/server/tls.key
        - --query.http.tls.cert=/var/run/tls/server/tls.crt
        - --query.http.tls.client-ca=/var/run/ca/service-ca.crt
        - --query.grpc.tls.enabled=true
        - --query.grpc.tls.key=/var/run/tls/server/tls.key
        - --query.grpc.tls.cert=/var/run/tls/server/tls.crt
        - --query.grpc.tls.client-ca=/var/run/ca/service-ca.crt
        image: docker.io/grafana/tempo-query:2.3.0
        imagePullPolicy: IfNotPresent
        name: tempo-query
        ports:
        - containerPort: 16685
          name: jaeger-gprc
          protocol: TCP
        - containerPort: 16686
          name: jaeger-ui
          protocol: TCP
        - containerPort: 16687
          name: jaeger-metrics
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /conf
          name: tempo-conf
          readOnly: true
        - mountPath: /var/tempo
          name: tempo-tmp-storage-query
        - mountPath: /var/run/ca
          name: tempo-foo-ca-bundle
        - mountPath: /var/run/tls/server
          name: tempo-foo-query-frontend-mtls
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: tempo-foo
      serviceAccountName: tempo-foo
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: tempo-foo
        name: tempo-conf
      - emptyDir: {}
        name: tempo-tmp-storage
      - emptyDir: {}
        name: tempo-tmp-storage-query
      - configMap:
          defaultMode: 420
          name: tempo-foo-ca-bundle
        name: tempo-foo-ca-bundle
      - name: tempo-foo-query-frontend-mtls
        secret:
          defaultMode: 420
          secretName: tempo-foo-query-frontend-mtls
